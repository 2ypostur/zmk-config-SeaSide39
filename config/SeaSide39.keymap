// trigger actions

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>


#define SYMBOL 1
#define NUM    2
#define CONFIG 3

&mt { flavor = "balanced"; quick-tap-ms = <300>; };
&lt { flavor = "balanced"; quick-tap-ms = <300>; };

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;
            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    /* ===== ここから keymap は / の中に置く ===== */
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q   &kp W   &kp E   &kp R   &kp T                  &kp Y   &kp U   &kp I   &kp O   &kp P
&kp A   &kp S   &kp D   &kp F   &kp G                  &kp H   &kp J   &kp K   &kp L   &mt LEFT_SHIFT N6
&kp Z   &kp X   &kp C   &kp V   &kp B                  &kp N   &kp M   &mt LEFT_ALT LEFT_ARROW   &mt LEFT_SHIFT N5   &kp RIGHT_ARROW
&kp LEFT_SHIFT &kp LEFT_ALT &lt 3 MHEN &kp LEFT_GUI &lt 1 &kp HENK &lt 2 &kp SPACE &kp BACKSPACE &lt 2 &kp ENTER &kp LEFT_CTRL &trans
            >;
          sensor-bindings = < &inc_dec_kp MS_UP MS_DOWN  &inc_dec_kp MS_LEFT MS_RIGHT >;
        };

        SYMBOL {
            bindings = <
&kp ESC         &kp N7    &kp N8    &kp N9    &kp N0         &kp COMMA   &kp PERIOD   &mkp MB3        &kp LBKT         &kp RBKT
&kp TAB         &kp N4    &kp N5    &kp N6    &kp EQUAL      &kp SEMI    &mkp MB1     &mkp MB1        &kp UP_ARROW     &mkp MB2
&kp LEFT_SHIFT  &kp N1    &kp N2    &kp N3    &kp MINUS      &kp FSLH    &kp LEFT_ARROW  &kp RIGHT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW
&trans          &trans    &trans    &trans    &trans         &trans      &trans         &trans           &trans           &trans
            >;
          sensor-bindings = < &inc_dec_kp MS_UP MS_DOWN  &inc_dec_kp MS_LEFT MS_RIGHT >;
        };

        NUM {
            bindings = <
&kp ESC         &kp KP_N7   &kp KP_N8   &kp KP_N9   &kp KP_N0   &kp COMMA   &kp PERIOD   &mkp MB3        &kp LBKT         &kp RBKT
&kp TAB         &kp KP_N4   &kp KP_N5   &kp KP_N6   &kp KP_EQUAL &kp SEMI    &mkp MB1     &mkp MB1        &kp UP_ARROW     &mkp MB2
&kp LEFT_SHIFT  &kp KP_N1   &kp KP_N2   &kp KP_N3   &kp KP_MINUS &kp FSLH    &kp LEFT_ARROW  &kp RIGHT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW
&trans          &trans      &trans      &trans      &trans       &trans      &trans         &trans           &trans           &trans
            >;
          sensor-bindings = < &inc_dec_kp MS_UP MS_DOWN  &inc_dec_kp MS_LEFT MS_RIGHT >;
        };

        CONFIG {
            bindings = <
&kp F1   &kp F2   &kp F3   &kp F4   &kp F5        &bt BT_CLR_ALL  &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2
&kp F6   &kp F7   &kp F8   &kp F9   &kp F10       &bt BT_SEL 3    &bt BT_SEL 4 &bootloader   &trans         &trans
&kp F11  &kp F12  &trans   &trans   &trans        &trans          &trans       &trans        &trans         &trans
&trans   &trans   &trans   &trans   &trans        &trans          &trans       &trans        &trans         &trans
            >;
          sensor-bindings = < &inc_dec_kp MS_UP MS_DOWN  &inc_dec_kp MS_LEFT MS_RIGHT >;
        };
    };
}; 
